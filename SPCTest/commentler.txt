
/*    @BeforeSuite
    public void beforesuite(){
        System.out.println("Chrome setup system property");
    }
    @BeforeTest
    public void beforetest(){
        System.out.println("open chrome");
    }
    @BeforeClass
    public void beforeclass(){
        System.out.println("open test aplication");
    }
    @BeforeMethod
    public void beforemethod(){
        System.out.println("sign in");
    }
    @AfterMethod
    public void AfterMethod1(){
        System.out.println("sign out");
    }
    @AfterTest
    public void AfterTest(){
        System.out.println("close chrome");
    }*/

}

//REL Camera yok
/* @Test(description = "Success 101RELCamera")
    public void line_101_REL_Camera_Success() throws InterruptedException{
        try {

            LoginPage login = new LoginPage(driver);
            LineSelection line = new LineSelection(driver);
            WorkCenterSelection workcenter = new WorkCenterSelection(driver);
            StationTypeSelection stationtype = new StationTypeSelection(driver);
            MainPage main = new MainPage(driver);

            login.LineID().click();
            Thread.sleep(1000);
            line.LineID_101().click();
            Thread.sleep(1000);

            login.WorkCenter().click();
            Thread.sleep(1000);
            workcenter.WorkCenter_REL().click();
            Thread.sleep(1000);

            login.StationType().click();
            Thread.sleep(1000);
            stationtype.StationType_Camera().click();
            Thread.sleep(1000);

            login.SubmitButton().click();
            Thread.sleep(5000);
            String home_page_title = driver.getTitle();
            Assert.assertEquals(home_page_title, "SPC Data" );
            Assert.assertEquals(main.Graph_Area().isDisplayed(),true);
            System.out.println("line_101_REL_Camera");
            main.Change_button().click();
            Thread.sleep(5000);
        }
        catch (Exception e){
            e.printStackTrace();
            Assert.fail("fail");
        }
}*/
/*                       if (text_tspan.contentEquals("0 %")) {
                            Actions action = new Actions(driver);
                            action.moveToElement(tspan).build().perform();
                            Thread.sleep(3000);
                            List<WebElement> tspans = driver.findElements(By.tagName("tspan"));
                            for (WebElement tspan1 : tspans) {
                                System.out.println(tspan1.getText());
                                System.out.println(tspan1.getAttribute("Total"));
                                System.out.println(tspan1.getAttribute("0"));
                                Thread.sleep(3000);
                            }
                            WebElement currentValueElement = driver.findElement(By.cssSelector("#highcharts-bnwjv5b-0 > svg > g.highcharts-label.highcharts-tooltip.highcharts-color-0 > text > tspan:nth-child(4)"));
                            Thread.sleep(1000);
                            System.out.println(currentValueElement.getText());
                            Thread.sleep(1000);*/
//                       //*[@class="highcharts-label-box highcharts-tooltip-box"]
//                       //*[@class="highcharts-label highcharts-tooltip highcharts-color-0"]
//                       //  //*[@class="highcharts-label-box highcharts-tooltip-box"]>text[data-z-index]
//
//                        //   .highcharts-tooltip-box.highcharts-color-0>text[data-z-index]>tspan:nth-of-type(2)  css selector/*                       if (text_tspan.contentEquals("0 %")) {
//                            Actions action = new Actions(driver);
//                            action.moveToElement(tspan).build().perform();
//                            Thread.sleep(3000);
//                            List<WebElement> tspans = driver.findElements(By.tagName("tspan"));
//                            for (WebElement tspan1 : tspans) {
//                                System.out.println(tspan1.getText());
//                                System.out.println(tspan1.getAttribute("Total"));
//                                System.out.println(tspan1.getAttribute("0"));
//                                Thread.sleep(3000);
//                            }
//                            WebElement currentValueElement = driver.findElement(By.cssSelector("#highcharts-bnwjv5b-0 > svg > g.highcharts-label.highcharts-tooltip.highcharts-color-0 > text > tspan:nth-child(4)"));
//                            Thread.sleep(1000);
//                            System.out.println(currentValueElement.getText());
//                            Thread.sleep(1000);*/
//WebElement currency_value = driver.findElement(By.xpath("//*[@class='highcharts-label highcharts-tooltip-box highcharts-color-0']//*[name()='tspan']"));
// System.out.println(currency_value.getText());
//                            WebElement tspan_total = main.tooltip_Value();
//                            tspan_total.getAttribute("text");
//                            System.out.println(tspan_total.getText());
//                            for (WebElement tspan_total : main.tooltip_Value()){
//                                String text_tspan_total = tspan_total.getText();
//
//                                if (text_tspan_total.contentEquals("Total")) {
//                                    System.out.println(text_tspan_total);
//                                }
//                           }
//get the element that contains the data
//WebElement currentValueElement = driver.findElement(By.xpath("//*[@class='highcharts-label highcharts-tooltip highcharts-color-0']//text/tspan[last()]"));
//get the value from that element
//System.out.println(currentValueElement);
//int currentvalue = Integer.parseInt(currentValueElement.split(":")[1].trim());
//tspan.click();
//boolean t = driver.getPageSource().contains("Total");
//System.out.println(driver.getPageSource());
/*
                            Actions builder = new Actions (driver);
                            builder.clickAndHold().moveToElement(tspan);
                            builder.moveToElement(tspan).build().perform();
                            Thread.sleep(1000);

                            String tips = driver.findElement(By.xpath("//*[@class=\"highcharts-label-box highcharts-tooltip-box\"]")).getAttribute()
                            System.out.println(tips);
               System.out.println("line_101_APL_Camera pass");
                main.Change_button().click();
                Thread.sleep(5000);
        }
            catch (Exception e){
                e.printStackTrace();
                Assert.fail("fail");
            }
        }*/
		
		
		//                //dot of the highchart where I put my mouse to see the tooltip. Selenium Webdriver doesn't find it and it causes an error, it stops the execution here
//                WebElement element = driver.findElement(By.xpath("//body[1]/div[2]/div[3]/div[3]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/svg[1]/g[6]/g[9]/path[2]"));  //dot's xpath
//                // Use action class to mouse hover on the dot
//                Actions action = new Actions(driver);
//                action.moveToElement(element).build().perform();
//                WebElement toolTipElement = driver.findElement(By.xpath("//*[@id=\"highcharts-2n6a7k0-0\"]/svg/g[11]/text/tspan[3]"));      //xpath of the shown tooltip
//                // To get the tool tip text
//                String toolTipText = toolTipElement.getText();
//                System.out.println(toolTipText);
/*            Thread.sleep(1000);
            int graph_count = (main.Graph_Value().size())/6;
            Assert.assertNotEquals(graph_count,0); // Hi√ß bir grafik yoksa fail olsun
            System.out.println(graph_count + " chart is available");
            int i=0;
            for (WebElement tspan : main.Tspan_Value())
            {
                String text_tspan = tspan.getText();
                if (text_tspan.contentEquals("0 %")) {i++;}
            }
            int ok_graph_count = i/2;
            if(graph_count==0){
                System.out.println("No measurement result");
            }
            else{System.out.println(ok_graph_count + " of measurement result is 0%");}*/
//REL Camera yok
/* @Test(description = "Success 102RELCamera")
    public void line_102_REL_Camera_Success() throws InterruptedException{
        try {

            LoginPage login = new LoginPage(driver);
            LineSelection line = new LineSelection(driver);
            WorkCenterSelection workcenter = new WorkCenterSelection(driver);
            StationTypeSelection stationtype = new StationTypeSelection(driver);
            MainPage main = new MainPage(driver);

            login.LineID().click();
            Thread.sleep(1000);
            line.LineID_102().click();
            Thread.sleep(1000);

            login.WorkCenter().click();
            Thread.sleep(1000);
            workcenter.WorkCenter_REL().click();
            Thread.sleep(1000);

            login.StationType().click();
            Thread.sleep(1000);
            stationtype.StationType_Camera().click();
            Thread.sleep(1000);

            login.SubmitButton().click();
            Thread.sleep(5000);
            String home_page_title = driver.getTitle();
            Assert.assertEquals(home_page_title, "SPC Data" );
            Assert.assertEquals(main.Graph_Area().isDisplayed(),true);
            System.out.println("line_102_REL_Camera");
            main.Change_button().click();
            Thread.sleep(5000);
        }
        catch (Exception e){
            e.printStackTrace();
            Assert.fail("fail");
        }
    }*/